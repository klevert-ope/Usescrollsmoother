{"code":"/**\n * @file\n * useScrollSmoother\n * A src for managing smooth scrolling behavior using gsap's ScrollSmoother.\n * @copyright (c) 2023 Klevert Opee\n * @license ISC\n */\nimport { __assign } from \"tslib\";\nimport gsap from \"gsap\";\nimport ScrollSmoother from \"gsap/ScrollSmoother\";\nimport ScrollTrigger from \"gsap/ScrollTrigger\";\nimport { useEffect, useLayoutEffect, useRef } from \"react\";\ngsap.registerPlugin(ScrollSmoother, ScrollTrigger);\n/**\n * A src for managing smooth scrolling behavior using gsap ScrollSmoother.\n *\n * @param {UseScrollSmootherProps} props - The src's properties of ScrollSmoother.create({config});\n * @returns {UseScrollSmootherResult} - The result containing refs for smooth wrapper and content.\n */\nexport function useScrollSmoother(_a) {\n    var _b = _a === void 0 ? {} : _a, config = _b.config;\n    var Config = config || {};\n    var smoothWrapperRef = useRef(null);\n    var smoothContentRef = useRef(null);\n    var UseIsomorphicLayoutEffect;\n    if (typeof window !== 'undefined') {\n        UseIsomorphicLayoutEffect = useLayoutEffect;\n    }\n    else {\n        UseIsomorphicLayoutEffect = useEffect;\n    }\n    UseIsomorphicLayoutEffect(function () {\n        if (!smoothWrapperRef.current || !smoothContentRef.current) {\n            throw new Error('Smooth wrapper or content Ref not found. Make sure the refs exist.');\n        }\n        var gsapContext = gsap.context(function () {\n            ScrollTrigger.normalizeScroll(Config.snormalizescroll);\n            ScrollTrigger.config({\n                ignoreMobileResize: Config.signoremobileresize,\n                syncInterval: 100\n            });\n            ScrollSmoother.create(__assign({ wrapper: smoothWrapperRef.current, content: smoothContentRef.current }, Config));\n        });\n        return function () {\n            gsapContext.revert();\n        };\n    }, []);\n    return { smoothWrapperRef: smoothWrapperRef, smoothContentRef: smoothContentRef };\n}\n//# sourceMappingURL=useScrollSmoother.js.map","references":["C:/Users/HomePC/WebstormProjects/Usescrollsmoother/node_modules/gsap/types/index.d.ts","C:/Users/HomePC/WebstormProjects/Usescrollsmoother/node_modules/gsap/ScrollTrigger.js","C:/Users/HomePC/WebstormProjects/Usescrollsmoother/node_modules/@types/react/index.d.ts"],"map":"{\"version\":3,\"file\":\"useScrollSmoother.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/useScrollSmoother.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;GAMG;;AAEH,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,cAAc,MAAM,qBAAqB,CAAC;AACjD,OAAO,aAAa,MAAM,oBAAoB,CAAC;AAC/C,OAAc,EAAiC,SAAS,EAAE,eAAe,EAAE,MAAM,EAAC,MAAM,OAAO,CAAC;AAEhG,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,aAAa,CAAC,CAAC;AAuGnD;;;;;GAKG;AACH,MAAM,UAAU,iBAAiB,CAAC,EAAuC;QAAvC,qBAAqC,EAAE,KAAA,EAArC,MAAM,YAAA;IACzC,IAAM,MAAM,GAAyB,MAAM,IAAK,EAA2B,CAAC;IAE5E,IAAM,gBAAgB,GAAG,MAAM,CAAiB,IAAI,CAAC,CAAC;IACtD,IAAM,gBAAgB,GAAG,MAAM,CAAiB,IAAI,CAAC,CAAC;IAEtD,IAAI,yBAAkF,CAAC;IACvF,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE,CAAC;QACnC,yBAAyB,GAAG,eAAe,CAAC;IAC7C,CAAC;SAAM,CAAC;QACP,yBAAyB,GAAG,SAAS,CAAC;IACvC,CAAC;IAED,yBAAyB,CAAC;QACzB,IAAI,CAAC,gBAAgB,CAAC,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC;YAC5D,MAAM,IAAI,KAAK,CAAC,oEAAoE,CAAC,CAAC;QACvF,CAAC;QAED,IAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC;YAChC,aAAa,CAAC,eAAe,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;YACvD,aAAa,CAAC,MAAM,CAAC;gBACpB,kBAAkB,EAAE,MAAM,CAAC,mBAAmB;gBAC9C,YAAY,EAAE,GAAG;aACjB,CAAC,CAAC;YAEH,cAAc,CAAC,MAAM,YACpB,OAAO,EAAE,gBAAgB,CAAC,OAAO,EACjC,OAAO,EAAE,gBAAgB,CAAC,OAAO,IAC9B,MAAM,EACR,CAAC;QACJ,CAAC,CAAC,CAAC;QACH,OAAO;YACN,WAAW,CAAC,MAAM,EAAE,CAAC;QACtB,CAAC,CAAC;IACH,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO,EAAE,gBAAgB,kBAAA,EAAE,gBAAgB,kBAAA,EAAE,CAAC;AAC/C,CAAC\"}","dtsmap":{"name":"C:/Users/HomePC/WebstormProjects/Usescrollsmoother/node_modules/.cache/rollup-plugin-typescript2/placeholder/useScrollSmoother.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"useScrollSmoother.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/useScrollSmoother.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;GAMG;AAKH,OAAO,KAA2E,MAAM,OAAO,CAAC;AAIhG,KAAK,oBAAoB,GAAG;IAC1B;;OAEG;IACJ,MAAM,EAAE,MAAM,CAAC;IACd;;;;;OAKG;IACJ,WAAW,EAAE,OAAO,GAAG,MAAM,CAAC;IAC7B;;;;OAIG;IACJ,eAAe,EAAE,OAAO,CAAC;IACxB;;;;;OAKG;IACJ,gBAAgB,EAAE,OAAO,CAAC;IACzB;;;;;;;OAOG;IACJ,kBAAkB,EAAE,OAAO,CAAC;IAC3B;;;;;;;GAOE;IACH,mBAAmB,EAAE,OAAO,CAAC;IAC5B;;;;;;;;;GASE;IACH,OAAO,EAAE,WAAW,CAAC;IACpB;;;;GAIE;IACH,aAAa,EAAE,MAAM,CAAC;IACrB;;;;GAIE;IACH,cAAc,EAAE,MAAM,CAAC;IACtB;;GAEE;IACH,IAAI,EAAE,MAAM,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC;IAC3B;;GAEE;IACH,QAAQ,EAAE,MAAM,IAAI,CAAC;IACpB;;;;GAIE;IACH,SAAS,EAAE,MAAM,IAAI,CAAC;IACrB;;GAEE;IACH,MAAM,EAAE,MAAM,IAAI,CAAC;CACnB,CAAC;AAEF,KAAK,sBAAsB,GAAG;IAC7B;;OAEG;IACH,MAAM,CAAC,EAAE,oBAAoB,CAAC;CAC9B,CAAC;AAEF,KAAK,uBAAuB,GAAG;IAC9B,gBAAgB,EAAE,KAAK,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;IAClD,gBAAgB,EAAE,KAAK,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;CAClD,CAAC;AAEF,KAAK,WAAW,GAAG,MAAM,GAAG,OAAO,GAAG,WAAW,GAAG,SAAS,CAAC;AAC9D,KAAK,WAAW,GAAG,MAAM,EAAE,CAAC;AAE5B;;;;;GAKG;AACH,wBAAgB,iBAAiB,CAAC,EAAE,MAAM,EAAE,GAAE,sBAA2B,GAAG,uBAAuB,CAqClG\"}"},"dts":{"name":"C:/Users/HomePC/WebstormProjects/Usescrollsmoother/node_modules/.cache/rollup-plugin-typescript2/placeholder/useScrollSmoother.d.ts","writeByteOrderMark":false,"text":"/**\n * @file\n * useScrollSmoother\n * A src for managing smooth scrolling behavior using gsap's ScrollSmoother.\n * @copyright (c) 2023 Klevert Opee\n * @license ISC\n */\nimport React from \"react\";\ntype ScrollSmootherConfig = {\n    /**\n     * smooth - the time (in seconds) that it takes to \"catch up\" to the native scroll position.\n     */\n    smooth: number;\n    /**\n     *  smoothTouch - by default, ScrollSmoother will NOT apply scroll smoothing on touch-only\n     *   devices (like phones) because that typically feels odd to users when it disconnects from their finger's drag\n     *   position, but you can force smoothing on touch devices too by setting smoothTouch: true (same as smooth value) or\n     *   specify an amount like smoothTouch: 0.1 (in seconds).\n     */\n    smoothTouch: boolean | number;\n    /**\n     * if true, it forces scrolling to be done on the JavaScript thread,\n     * ensuring it is synchronized, and the address bar doesn't show/hide on mobile devices.\n     * it debounces because smooth scrolling makes that possible.\n     */\n    normalizeScroll: boolean;\n    /**\n     * This is ScrollTrigger.normalizeScroll()\n     * if true,\n     * it forces scrolling to be done on the JavaScript thread,\n     * ensuring it is synchronized, and the address bar doesn't show/hide on mobile devices.\n     */\n    snormalizescroll: boolean;\n    /**\n     * if true,\n     * vertical resizes (of 25% of the viewport height) on touch-only devices won't trigger a ScrollTrigger.refresh(),\n     * avoiding the jumps that can happen when the start/end values are recalculated.\n     * Beware that if you skip the refresh(),\n     * the start/end trigger positions may be inaccurate but in many scenarios\n     * that are preferable to the visual jumps that occur due to the new start/end positions.\n     */\n    ignoreMobileResize: boolean;\n    /**\n     * This is ScrollTrigger.ignoreMobileResize()\n     * if true, vertical resizes (of 25% of the viewport height) on touch-only devices won't trigger a ScrollTrigger.refresh(),\n     * avoiding the jumps that can happen when the start/end values are recalculated.\n     * Beware that if you skip the refresh(),\n     * the start/end trigger positions may be inaccurate but in many scenarios\n     * that are preferable to the visual jumps that occur due to the new start/end positions.\n */\n    signoremobileresize: boolean;\n    /**\n     * if true, ScrollSmoother will find all elements that have a data-speed\n     * and/or data-lag attribute and apply those effects accordingly so that they move at the designated speed or delay,\n     * so data-speed=\"0.5\" would scroll at half the normal speed, and data-speed=\"2\" would scroll at twice the normal speed.\n     * data-lag=\"0.8\" would take 0.8 seconds to \"catch up\" to the smoothed scroll position. You can also use\n     * selector text or an Array of elements, so effects: \".box\" would only look for the attributes on elements with the \".box\" class.\n     * You can use the effects() method to apply effects directly via JavaScript instead.\n     * See that method's docs for more details about how effects work.\n     * Note: effects should not be nested.\n */\n    effects: EffectsType;\n    /**\n     * perhaps you're already using data-speed and/or data-lag for other purposes,\n     * and you'd like to use a custom prefix for effects data attributes like effectsPrefix:\n     * \"scroll-\" would resolve to data-scroll-speed and data-scroll-lag.\n */\n    effectsPrefix: string;\n    /**\n     * Normally, effects applied to a particular element begin as soon as the natural\n     * position of the element enters the viewport and then end when the natural position leaves the viewport. However, in\n     * some rare cases you may want to expand that, so you can pass a number (in pixels) as the effectsPadding.\n */\n    effectsPadding: number;\n    /**\n     * the easing function to be used for smooth scrolling. Default is \"expo\".\n */\n    ease: string | (() => void);\n    /**\n     * a function to call after each time the SmoothScroller updates the position of the content.\n */\n    onUpdate: () => void;\n    /**\n     * a function to call when a new element receives focus,\n     * and you can return false if you want ScrollSmoother to skip ensuring that the element is in the viewport\n     * (overriding that default behavior).\n */\n    onFocusIn: () => void;\n    /**\n     * a function to call when the smoothed scroll comes to a stop (catches up to the native scroll position).\n */\n    onStop: () => void;\n};\ntype UseScrollSmootherProps = {\n    /**\n     * Configuration options for the ScrollSmoother.\n     */\n    config?: ScrollSmootherConfig;\n};\ntype UseScrollSmootherResult = {\n    smoothWrapperRef: React.RefObject<HTMLDivElement>;\n    smoothContentRef: React.RefObject<HTMLDivElement>;\n};\ntype EffectsType = string | boolean | StringArray | undefined;\ntype StringArray = string[];\n/**\n * A src for managing smooth scrolling behavior using gsap ScrollSmoother.\n *\n * @param {UseScrollSmootherProps} props - The src's properties of ScrollSmoother.create({config});\n * @returns {UseScrollSmootherResult} - The result containing refs for smooth wrapper and content.\n */\nexport declare function useScrollSmoother({ config }?: UseScrollSmootherProps): UseScrollSmootherResult;\nexport {};\n//# sourceMappingURL=useScrollSmoother.d.ts.map"}}
